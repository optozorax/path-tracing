#ifndef PT_BASICS_H
#define PT_BASICS_H

#include <random>

namespace pt
{

	class Color
	{
	public:
		double r, g, b;

		/** Прозрачный цвет используется только для обозначения transparent неба и при подсчете среднего арифметического, чтобы итоговая полупрозрачная картика выглядела полупрозрачной на краях. */
		double a;

		/** @note можно задавать цвет прозрачности, но крайне не рекомендуется, программа не рассчитана на это. Поведение будет непредсказуемым. Программа рассчитана только на два значения - 1 для обычных цветов и 0 для прозрачного. */
		Color(double r, double g, double b, double a = 1) : r(r), g(g), b(b), a(a) {}

		/** Делит цвет на некоторое число для взятия среднего арифметического среди нескольких цветов. Среднее арифметическое так же берется и для альфа канала. */
		Color& operator/=(double k);

		/** Умножает два цвета, только в пространстве r, g, b. Если один из цветов Transparent, то возвращает текущий цвет.

		ИЛИ. Считает, что оба цвета полупрозрачные и считает как если бы текущий накладывался поверх a. */
		Color& operator*(const Color& a);

		/** Получает квадратный корень из цвета. При этом квадратный корень из альфа-канала не берется. */
		Color& sqrt(void);
	private:
	};

	const Color transparent(0, 0, 0, 0);

	float random(void);
	Vector randomSphere(void);

};

#endif